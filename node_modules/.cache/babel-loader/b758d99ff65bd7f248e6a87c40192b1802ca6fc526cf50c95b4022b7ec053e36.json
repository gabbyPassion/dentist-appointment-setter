{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owner\\\\Desktop\\\\React Apps\\\\ReactApps\\\\appointment-app\\\\src\\\\components\\\\tileList\\\\TileList.js\";\nimport React from \"react\";\nimport { Tile } from \"../tile/Tile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TileList = _ref => {\n  let {\n    tiles\n  } = _ref;\n  if (!tiles || !Array.isArray(tiles)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No appointments available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tiles.map((appointment, index) => {\n      if (typeof appointment.title !== \"string\" || typeof appointment.contact !== \"string\" || typeof appointment.date !== \"string\" || typeof appointment.time !== \"string\" || typeof appointment.reason !== \"string\") {\n        return null;\n      }\n      return /*#__PURE__*/_jsxDEV(Tile, {\n        appointment: appointment\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = TileList;\nvar _c;\n$RefreshReg$(_c, \"TileList\");","map":{"version":3,"names":["React","Tile","jsxDEV","_jsxDEV","TileList","_ref","tiles","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","map","appointment","index","title","contact","date","time","reason","_c","$RefreshReg$"],"sources":["C:/Users/owner/Desktop/React Apps/ReactApps/appointment-app/src/components/tileList/TileList.js"],"sourcesContent":["import React from \"react\";\r\nimport { Tile } from \"../tile/Tile\";\r\n\r\nexport const TileList = ({ tiles }) => {\r\n  if (!tiles || !Array.isArray(tiles)) {\r\n    return <p>No appointments available.</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {tiles.map((appointment, index) => {\r\n        if (\r\n          typeof appointment.title !== \"string\" ||\r\n          typeof appointment.contact !== \"string\" ||\r\n          typeof appointment.date !== \"string\" ||\r\n          typeof appointment.time !== \"string\" ||\r\n          typeof appointment.reason !== \"string\"\r\n        ) {\r\n          return null;\r\n        }\r\n\r\n        return <Tile key={index} appointment={appointment} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,OAAO,MAAMC,QAAQ,GAAGC,IAAA,IAAe;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAD,IAAA;EAChC,IAAI,CAACC,KAAK,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;IACnC,oBAAOH,OAAA;MAAAM,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1C;EAEA,oBACEV,OAAA;IAAAM,QAAA,EACGH,KAAK,CAACQ,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,KAAK;MACjC,IACE,OAAOD,WAAW,CAACE,KAAK,KAAK,QAAQ,IACrC,OAAOF,WAAW,CAACG,OAAO,KAAK,QAAQ,IACvC,OAAOH,WAAW,CAACI,IAAI,KAAK,QAAQ,IACpC,OAAOJ,WAAW,CAACK,IAAI,KAAK,QAAQ,IACpC,OAAOL,WAAW,CAACM,MAAM,KAAK,QAAQ,EACtC;QACA,OAAO,IAAI;MACb;MAEA,oBAAOlB,OAAA,CAACF,IAAI;QAAac,WAAW,EAAEA;MAAY,GAAhCC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6B,CAAC;IACvD,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACS,EAAA,GAtBWlB,QAAQ;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}